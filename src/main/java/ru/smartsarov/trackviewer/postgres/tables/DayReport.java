/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.trackviewer.postgres.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.trackviewer.postgres.Indexes;
import ru.smartsarov.trackviewer.postgres.Keys;
import ru.smartsarov.trackviewer.postgres.Public;
import ru.smartsarov.trackviewer.postgres.tables.records.DayReportRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DayReport extends TableImpl<DayReportRecord> {

    private static final long serialVersionUID = -854667562;

    /**
     * The reference instance of <code>public.day_report</code>
     */
    public static final DayReport DAY_REPORT = new DayReport();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<DayReportRecord> getRecordType() {
        return DayReportRecord.class;
    }

    /**
     * The column <code>public.day_report.id</code>.
     */
    public final TableField<DayReportRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('day_report_id_seq'::regclass)", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>public.day_report.total_waiting</code>.
     */
    public final TableField<DayReportRecord, Integer> TOTAL_WAITING = createField("total_waiting", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.day_report.distance</code>.
     */
    public final TableField<DayReportRecord, Integer> DISTANCE = createField("distance", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.day_report.ts</code>.
     */
    public final TableField<DayReportRecord, Timestamp> TS = createField("ts", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.day_report.vehicle_number</code>.
     */
    public final TableField<DayReportRecord, Integer> VEHICLE_NUMBER = createField("vehicle_number", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>public.day_report</code> table reference
     */
    public DayReport() {
        this(DSL.name("day_report"), null);
    }

    /**
     * Create an aliased <code>public.day_report</code> table reference
     */
    public DayReport(String alias) {
        this(DSL.name(alias), DAY_REPORT);
    }

    /**
     * Create an aliased <code>public.day_report</code> table reference
     */
    public DayReport(Name alias) {
        this(alias, DAY_REPORT);
    }

    private DayReport(Name alias, Table<DayReportRecord> aliased) {
        this(alias, aliased, null);
    }

    private DayReport(Name alias, Table<DayReportRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> DayReport(Table<O> child, ForeignKey<O, DayReportRecord> key) {
        super(child, key, DAY_REPORT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.DAY_REPORT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<DayReportRecord, Integer> getIdentity() {
        return Keys.IDENTITY_DAY_REPORT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<DayReportRecord> getPrimaryKey() {
        return Keys.DAY_REPORT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<DayReportRecord>> getKeys() {
        return Arrays.<UniqueKey<DayReportRecord>>asList(Keys.DAY_REPORT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DayReport as(String alias) {
        return new DayReport(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DayReport as(Name alias) {
        return new DayReport(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DayReport rename(String name) {
        return new DayReport(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public DayReport rename(Name name) {
        return new DayReport(name, null);
    }
}
