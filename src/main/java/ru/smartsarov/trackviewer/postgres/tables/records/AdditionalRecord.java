/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.trackviewer.postgres.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;

import ru.smartsarov.trackviewer.postgres.tables.Additional;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AdditionalRecord extends UpdatableRecordImpl<AdditionalRecord> implements Record6<Integer, String, String, String, String, String> {

    private static final long serialVersionUID = 1550680771;

    /**
     * Setter for <code>public.additional.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.additional.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.additional.uid</code>.
     */
    public void setUid(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.additional.uid</code>.
     */
    public String getUid() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.additional.type</code>.
     */
    public void setType(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.additional.type</code>.
     */
    public String getType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.additional.owner</code>.
     */
    public void setOwner(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.additional.owner</code>.
     */
    public String getOwner() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.additional.model</code>.
     */
    public void setModel(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.additional.model</code>.
     */
    public String getModel() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.additional.description</code>.
     */
    public void setDescription(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.additional.description</code>.
     */
    public String getDescription() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, String, String, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<Integer, String, String, String, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Additional.ADDITIONAL.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Additional.ADDITIONAL.UID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Additional.ADDITIONAL.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Additional.ADDITIONAL.OWNER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field5() {
        return Additional.ADDITIONAL.MODEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field6() {
        return Additional.ADDITIONAL.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getUid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getOwner();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component5() {
        return getModel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component6() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getUid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getOwner();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value5() {
        return getModel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value6() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AdditionalRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AdditionalRecord value2(String value) {
        setUid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AdditionalRecord value3(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AdditionalRecord value4(String value) {
        setOwner(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AdditionalRecord value5(String value) {
        setModel(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AdditionalRecord value6(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AdditionalRecord values(Integer value1, String value2, String value3, String value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AdditionalRecord
     */
    public AdditionalRecord() {
        super(Additional.ADDITIONAL);
    }

    /**
     * Create a detached, initialised AdditionalRecord
     */
    public AdditionalRecord(Integer id, String uid, String type, String owner, String model, String description) {
        super(Additional.ADDITIONAL);

        set(0, id);
        set(1, uid);
        set(2, type);
        set(3, owner);
        set(4, model);
        set(5, description);
    }
}
