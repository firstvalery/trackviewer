/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.trackviewer.postgres.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import ru.smartsarov.trackviewer.postgres.tables.VehicleData;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VehicleDataRecord extends UpdatableRecordImpl<VehicleDataRecord> implements Record4<Integer, String, String, String> {

    private static final long serialVersionUID = 760152415;

    /**
     * Setter for <code>public.vehicle_data.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.vehicle_data.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.vehicle_data.uid</code>.
     */
    public void setUid(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.vehicle_data.uid</code>.
     */
    public String getUid() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.vehicle_data.number</code>.
     */
    public void setNumber(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.vehicle_data.number</code>.
     */
    public String getNumber() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.vehicle_data.type</code>.
     */
    public void setType(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.vehicle_data.type</code>.
     */
    public String getType() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return VehicleData.VEHICLE_DATA.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return VehicleData.VEHICLE_DATA.UID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return VehicleData.VEHICLE_DATA.NUMBER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return VehicleData.VEHICLE_DATA.TYPE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getUid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component3() {
        return getNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component4() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getUid();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getNumber();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getType();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VehicleDataRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VehicleDataRecord value2(String value) {
        setUid(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VehicleDataRecord value3(String value) {
        setNumber(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VehicleDataRecord value4(String value) {
        setType(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public VehicleDataRecord values(Integer value1, String value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VehicleDataRecord
     */
    public VehicleDataRecord() {
        super(VehicleData.VEHICLE_DATA);
    }

    /**
     * Create a detached, initialised VehicleDataRecord
     */
    public VehicleDataRecord(Integer id, String uid, String number, String type) {
        super(VehicleData.VEHICLE_DATA);

        set(0, id);
        set(1, uid);
        set(2, number);
        set(3, type);
    }
}
