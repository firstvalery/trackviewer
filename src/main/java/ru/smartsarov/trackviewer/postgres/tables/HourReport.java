/*
 * This file is generated by jOOQ.
 */
package ru.smartsarov.trackviewer.postgres.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import ru.smartsarov.trackviewer.postgres.Indexes;
import ru.smartsarov.trackviewer.postgres.Keys;
import ru.smartsarov.trackviewer.postgres.Public;
import ru.smartsarov.trackviewer.postgres.tables.records.HourReportRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HourReport extends TableImpl<HourReportRecord> {

    private static final long serialVersionUID = 163910024;

    /**
     * The reference instance of <code>public.hour_report</code>
     */
    public static final HourReport HOUR_REPORT = new HourReport();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<HourReportRecord> getRecordType() {
        return HourReportRecord.class;
    }

    /**
     * The column <code>public.hour_report.id</code>.
     */
    public final TableField<HourReportRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('hour_report_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.hour_report.ts</code>.
     */
    public final TableField<HourReportRecord, Timestamp> TS = createField("ts", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>public.hour_report.vehicle_id</code>.
     */
    public final TableField<HourReportRecord, Integer> VEHICLE_ID = createField("vehicle_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.hour_report.distance</code>.
     */
    public final TableField<HourReportRecord, Integer> DISTANCE = createField("distance", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.hour_report.waiting</code>.
     */
    public final TableField<HourReportRecord, Integer> WAITING = createField("waiting", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.hour_report.driving</code>.
     */
    public final TableField<HourReportRecord, Integer> DRIVING = createField("driving", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.hour_report.waitpoints_id</code>.
     */
    public final TableField<HourReportRecord, Integer> WAITPOINTS_ID = createField("waitpoints_id", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>public.hour_report.fuel</code>.
     */
    public final TableField<HourReportRecord, Float> FUEL = createField("fuel", org.jooq.impl.SQLDataType.REAL, this, "");

    /**
     * Create a <code>public.hour_report</code> table reference
     */
    public HourReport() {
        this(DSL.name("hour_report"), null);
    }

    /**
     * Create an aliased <code>public.hour_report</code> table reference
     */
    public HourReport(String alias) {
        this(DSL.name(alias), HOUR_REPORT);
    }

    /**
     * Create an aliased <code>public.hour_report</code> table reference
     */
    public HourReport(Name alias) {
        this(alias, HOUR_REPORT);
    }

    private HourReport(Name alias, Table<HourReportRecord> aliased) {
        this(alias, aliased, null);
    }

    private HourReport(Name alias, Table<HourReportRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> HourReport(Table<O> child, ForeignKey<O, HourReportRecord> key) {
        super(child, key, HOUR_REPORT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.HOUR_REPORT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<HourReportRecord, Long> getIdentity() {
        return Keys.IDENTITY_HOUR_REPORT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<HourReportRecord> getPrimaryKey() {
        return Keys.HOUR_REPORT_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<HourReportRecord>> getKeys() {
        return Arrays.<UniqueKey<HourReportRecord>>asList(Keys.HOUR_REPORT_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HourReport as(String alias) {
        return new HourReport(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HourReport as(Name alias) {
        return new HourReport(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HourReport rename(String name) {
        return new HourReport(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public HourReport rename(Name name) {
        return new HourReport(name, null);
    }
}
